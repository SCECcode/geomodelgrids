# docker build --build-arg BASE_IMAGE=${VARIABLE_NAME} --build-arg TEST_COVERAGE=yes/no --build-arg PYTHON_COVERAGE=${COVERAGE_EXECUTABLE} ENABLE_VALGRIND=yes/no  ENABLE_GDAL=yes/no -f DOCKERFILE . -t IMAGE_NAME .


ARG BASE_IMAGE
from ${BASE_IMAGE} as src
ARG TEST_COVERAGE=no
ARG PYTHON_COVERAGE=python3-coverage
ARG ENABLE_VALGRIND=no
ARG ENABLE_GDAL=no
ENV TEST_COVERAGE=${TEST_COVERAGE} PYTHON_COVERAGE=${PYTHON_COVERAGE} ENABLE_VALGRIND=${ENABLE_VALGRIND} ENABLE_GDAL=${ENABLE_GDAL}

LABEL maintainer="Brad Aagaard <baagaard@usgs.gov>"


# ------------------------------------------------------------------------------
ENV  src_dir=${TOP_SRCDIR}/geomodelgrids  build_dir=${TOP_BUILDDIR}/geomodelgrids

RUN mkdir -p ${src_dir}
COPY --chown=gmg-tester:gmg-tester . ${src_dir}
WORKDIR ${src_dir}
RUN autoreconf --install --verbose --force

RUN mkdir -p ${build_dir}
WORKDIR ${build_dir}
RUN ${src_dir}/configure --prefix=${INSTALL_DIR} --enable-python --enable-testing --enable-test-coverage=${TEST_COVERAGE} --with-python-coverage=${PYTHON_COVERAGE} --enable-valgrind=${ENABLE_VALGRIND} --enable-gdal=${ENABLE_GDAL} CPPFLAGS="-I${INSTALL_DIR}/include -I${HDF5_INCDIR}" LDFLAGS="-L${INSTALL_DIR}/lib -L${HDF5_LIBDIR}"  CFLAGS="-g -O --coverage" CXXFLAGS="-g -O --coverage"

# ------------------------------------------------------------------------------
from src as build

RUN make -j$(nproc) install

WORKDIR ${src_dir}

# ------------------------------------------------------------------------------
from build as test

WORKDIR ${build_dir}
RUN make check -C tests/data \
  && make clean-coverage \
  && make -j$(nproc) check -C tests/libtests VERBOSE=1 \
  && make coverage-libtests


# ------------------------------------------------------------------------------
CMD /bin/bash
