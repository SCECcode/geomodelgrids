FROM ubuntu:22.04 as os-update
LABEL maintainer="Brad Aagaard <baagaard@usgs.gov>"

RUN apt-get update \
  && DEBIAN_FRONTEND="noninteractive" apt-get install -y --no-install-recommends \
  g++ \
  make \
  file \
  automake \
  autoconf \
  libtool \
  curl \
  locales \
  libpython3.10 \
  python3-dev \
  python3-venv \
  python3-pip \
  zlib1g-dev \
  unzip \
  git \
  ca-certificates \
  hdf5-tools \
  libhdf5-dev \
  sqlite3 \
  libsqlite3-0 \
  libsqlite3-dev \
  proj-bin \
  proj-data \
  libproj-dev \
  gdal-bin \
  libgdal-dev \
  swig \
  lcov \
  gdb \
  valgrind \
  tree \
  less \
  uncrustify \
  libenchant-2-2 \
  gnupg2 \
  vim-common \
  vim-runtime \
  vim-nox

COPY docker/certs/ /usr/local/share/ca-certificates
RUN update-ca-certificates

ENV PYTHON_VERSION 3.10
ENV HDF5_INCDIR=/usr/include/hdf5/serial  HDF5_LIBDIR=/usr/lib/x86_64-linux-gnu/hdf5/serial

# ------------------------------------------------------------------------------
from os-update as user-setup

# Base directory is /opt/geomodelgrids (docker volume for persistent storage)

# Create 'gmg-user' user
ENV GMG_USER gmg-dev
RUN useradd --create-home --shell /bin/bash $GMG_USER
ENV  BASE_DIR=/opt/geomodelgrids  HOME=/home/$GMG_USER
ENV  INSTALL_DIR=$BASE_DIR/dest/debug  TOP_SRCDIR=$BASE_DIR/src  TOP_BUILDDIR=$BASE_DIR/build/debug
ENV  GEOMODELGRIDS_BUILDDIR=${TOP_BUILDDIR}  \
  PYTHON_INCDIR=/usr/include/python3.8 \
  MPI_INCDIR=/usr/include \
  PROJ_INCDIR=/usr/include \
  CPPUNIT_INCDIR=/usr/include

ENV LD_LIBRARY_PATH=$INSTALL_DIR/lib

# --------------------------------------
# Catch2
# --------------------------------------
ENV CATCH2_VER=3.3.2  src_dir=${TOP_SRCDIR}/catch2  build_dir=${TOP_BUILDDIR}/catch2
RUN mkdir -p ${src_dir} && mkdir -p ${build_dir}
WORKDIR ${src_dir}
RUN curl -L -O https://github.com/catchorg/Catch2/archive/refs/tags/v${CATCH2_VER}.tar.gz \
  && tar -xf v${CATCH2_VER}.tar.gz

WORKDIR ${build_dir}
RUN cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} ${src_dir}/Catch2-${CATCH2_VER} \
  && make -j$(nproc) \
  && make install \
  && rm -r ${build_dir}

# --------------------------------------
# Python packages
# --------------------------------------
RUN python3 -m venv ${INSTALL_DIR} && \
  if [ x${CERT_FILE} = x"no" ]; then \
  python3 -m pip install --upgrade pip setuptools && \
  python3 -m pip install numpy coverage && \
  CC=gcc HDF5_LIBDIR=${HDF5_LIBDIR} HDF5_INCLUDEDIR=${HDF5_INCDIR} python3 -m pip install --no-binary h5py h5py; \
  else \
  SSL_CERT_FILE=${CERT_FILE} REQUESTS_CA_BUNDLE=${CERT_FILE} python3 -m pip install --upgrade pip setuptools && \
  SSL_CERT_FILE=${CERT_FILE} REQUESTS_CA_BUNDLE=${CERT_FILE} python3 -m pip install numpy coverage && \
  SSL_CERT_FILE=${CERT_FILE} REQUESTS_CA_BUNDLE=${CERT_FILE} CC=gcc HDF5_LIBDIR=${HDF5_LIBDIR} HDF5_INCLUDEDIR=${HDF5_INCDIR} python3 -m pip install --no-binary h5py h5py; \
  fi


WORKDIR $HOME
RUN mkdir -p ${BASE_DIR} \
  && chown ${GMG_USER} ${BASE_DIR} \
  && chgrp ${GMG_USER} ${BASE_DIR}
USER ${GMG_USER}


CMD /bin/bash -c 'source ${INSTALL_DIR}/bin/activate'
